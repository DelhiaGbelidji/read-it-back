// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  firstname   String
  lastname    String
  password    String
  projects    Project[]
  manuscripts Manuscript[]
  comments    Comment[]
  created_at  DateTime     @default(now())

  @@map("users")
}

model Project {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  image      String?
  created_at DateTime    @default(now())
  user_id    Int
  user       User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
  manuscript Manuscript?

  @@map("projects")
}

model Manuscript {
  id         Int       @id @default(autoincrement())
  title      String
  file_url   String    @unique
  project_id Int       @unique
  project    Project   @relation(fields: [project_id], references: [id], onDelete: Cascade)
  comments   Comment[]
  user_id    Int
  user       User      @relation(fields: [user_id], references: [id])
  created_at DateTime  @default(now())

  @@map("manuscripts")
}

model Comment {
  id            Int        @id @default(autoincrement())
  content       String
  manuscript_id Int
  manuscript    Manuscript @relation(fields: [manuscript_id], references: [id], onDelete: Cascade)
  user_id       Int
  user          User       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  created_at    DateTime   @default(now())

  @@map("comments")
}
