// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  firstname String
  lastname  String
  password  String
  projects    Project[]
  manuscripts Manuscript[]
  comments    Comment[]

  @@map("users")

}

model Project {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  image     String?
  createdAt DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  manuscript  Manuscript?

  @@map("projects")
}


model Manuscript {
  id          Int         @id @default(autoincrement())
  title       String
  file_url     String
  projectId   Int @unique
  project     Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  comments    Comment[]
  userId    Int
  user      User @relation(fields: [userId], references: [id])

  @@map("manuscripts")
}

model Comment {
  id           Int        @id @default(autoincrement())
  content      String
  manuscriptId Int
  manuscript   Manuscript @relation(fields: [manuscriptId], references: [id], onDelete: Cascade)
  userId       Int
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("comments")
}